{"version":3,"file":"main.69e6df7799b0a5ecc5c7.js","mappings":"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","sources":["webpack://pixi7-game-demo/webpack/runtime/chunk loaded","webpack://pixi7-game-demo/./src/utils/Colors.ts","webpack://pixi7-game-demo/./src/components/DebugMenu.ts","webpack://pixi7-game-demo/./src/scenes/BaseScene.ts","webpack://pixi7-game-demo/./src/utils/AssetLoader.ts","webpack://pixi7-game-demo/./src/components/FireMetaBallSystem.ts","webpack://pixi7-game-demo/./src/scenes/PhoenixFlameScene.ts","webpack://pixi7-game-demo/./src/components/PlayingCard.ts","webpack://pixi7-game-demo/./src/scenes/AceOfShadowsScene.ts","webpack://pixi7-game-demo/./src/components/TextWithInlineImages.ts","webpack://pixi7-game-demo/./src/components/DialogueComponent.ts","webpack://pixi7-game-demo/./src/scenes/MagicWordsScene.ts","webpack://pixi7-game-demo/./src/components/SceneControls.ts","webpack://pixi7-game-demo/./src/GameManager.ts","webpack://pixi7-game-demo/./src/index.ts","webpack://pixi7-game-demo/webpack/bootstrap","webpack://pixi7-game-demo/webpack/runtime/define property getters","webpack://pixi7-game-demo/webpack/runtime/global","webpack://pixi7-game-demo/webpack/runtime/hasOwnProperty shorthand","webpack://pixi7-game-demo/webpack/runtime/make namespace object","webpack://pixi7-game-demo/webpack/runtime/node module decorator","webpack://pixi7-game-demo/webpack/runtime/jsonp chunk loading","webpack://pixi7-game-demo/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export enum Colors {\n  BLACK = 0x000000,\n  WHITE = 0xffffff,\n  RED = 0xff0000,\n  GREEN = 0x00ff00,\n  BLUE = 0x0000ff,\n  YELLOW = 0xffff00,\n  GRAY = 0x808080,\n  DARK_GRAY = 0x404040,\n  LIGHT_GRAY = 0xc0c0c0,\n\n  // Game specific colors\n  BACKGROUND = 0x111111,\n  DEBUG_GREEN = 0x22ff22,\n  DEBUG_YELLOW = 0xffee00,\n}\n","import { Container, Graphics, BitmapText } from 'pixi.js';\nimport { DebugInfo } from '../types';\nimport { Colors } from '../utils/Colors';\n\nexport class DebugMenu {\n  public container: Container;\n  private background: Graphics;\n  private fpsText!: BitmapText;\n  private spriteText!: BitmapText;\n\n  private readonly POS_X = 10;\n  private readonly POS_Y = 40;\n  private readonly PADDING = 10;\n  private readonly LINE_HEIGHT = 18;\n  private readonly FONT_SIZE = 16;\n\n  constructor() {\n    this.container = new Container();\n    this.background = new Graphics();\n  }\n\n  init(): void {\n    this.setupBackground();\n    this.setupTexts();\n    this.setupLayout();\n  }\n\n  private setupBackground(): void {\n    this.background.beginFill(0x000000, 0.7);\n    this.background.lineStyle(1, Colors.DEBUG_GREEN, 1);\n    this.background.drawRoundedRect(0, 0, 200, 3 * this.LINE_HEIGHT + 2 * this.PADDING, 5);\n    this.background.endFill();\n    this.container.addChild(this.background);\n  }\n\n  private setupTexts(): void {\n    this.fpsText = new BitmapText('FPS: 0', {\n      fontName: 'MonospaceBold',\n      fontSize: this.FONT_SIZE,\n    });\n    this.spriteText = new BitmapText('Sprites: 0', {\n      fontName: 'MonospaceBold',\n      fontSize: this.FONT_SIZE,\n    });\n\n    this.fpsText.tint = Colors.DEBUG_GREEN;\n    this.spriteText.tint = Colors.DEBUG_YELLOW;\n\n    this.container.addChild(this.fpsText);\n    this.container.addChild(this.spriteText);\n  }\n\n  private setupLayout(): void {\n    this.container.position.set(this.POS_X, this.POS_Y);\n    this.fpsText.position.set(this.PADDING, this.PADDING);\n    this.spriteText.position.set(this.PADDING, this.PADDING + 2 * this.LINE_HEIGHT);\n  }\n\n  updateDebugInfo(debugInfo: DebugInfo): void {\n    this.fpsText.text = `FPS: ${debugInfo.fps.toString()}`;\n    this.spriteText.text = `Sprites: ${debugInfo.spriteCount.toString()}`;\n\n    // Update FPS color based on performance\n    if (debugInfo.fps >= 55) {\n      this.fpsText.tint = Colors.DEBUG_GREEN;\n    } else if (debugInfo.fps >= 30) {\n      this.fpsText.tint = Colors.DEBUG_YELLOW;\n    } else {\n      this.fpsText.tint = Colors.RED;\n    }\n  }\n\n  setVisible(visible: boolean): void {\n    this.container.visible = visible;\n  }\n}\n","import { Container, Sprite } from 'pixi.js';\nimport { Scene } from '../types';\n\nexport abstract class BaseScene implements Scene {\n  public readonly container: Container;\n  public abstract readonly name: string;\n\n  protected screenWidth = 0;\n  protected screenHeight = 0;\n  protected initialized = false;\n\n  constructor() {\n    this.container = new Container();\n  }\n\n  abstract init(): void;\n\n  abstract update(deltaTime: number): void;\n\n  resize(width: number, height: number): void {\n    this.screenWidth = width;\n    this.screenHeight = height;\n\n    if (this.initialized) {\n      this.onResize(width, height);\n    }\n  }\n\n  protected onResize(_width: number, _height: number): void {}\n\n  destroy(): void {\n    this.container.removeChildren();\n    this.container.destroy({ children: true, texture: false, baseTexture: false });\n    this.initialized = false;\n  }\n\n  protected centerObject(sprite: Sprite): void {\n    sprite.x = this.screenWidth / 2;\n    sprite.y = this.screenHeight / 2;\n    sprite.anchor.set(0.5);\n  }\n}\n","import { Assets, Texture } from 'pixi.js';\nimport { EmojiData, AvatarData, MagicWordsData, AvatarTexture } from '../types';\n\nexport class AssetLoader {\n  private static textureCache = new Map<string, Texture>();\n  private static magicWordsData: MagicWordsData | null = null;\n  private static avatarTextures: Map<string, AvatarTexture> | null = null;\n\n  async loadInitialAssets(): Promise<void> {\n    const texture = await Assets.load<Texture>('assets/images/fish_blue.png');\n    AssetLoader.textureCache.set('demo_sprite', texture);\n    await AssetLoader.loadFont(\n      'MonospaceBold',\n      './assets/fonts/MonospaceBold.fnt',\n      './assets/fonts/MonospaceBold.png'\n    );\n    await AssetLoader.loadAtlas('playingCards', './assets/images/playingCards.json');\n    await AssetLoader.loadAtlas('fireParticles', './assets/images/fireParticles.json');\n    await AssetLoader.loadAtlas('fireMetaBalls', './assets/images/fireMetaBalls.json');\n\n    await AssetLoader.loadMagicWordsAssets();\n  }\n\n  static getTexture(name: string): Texture {\n    const texture = AssetLoader.textureCache.get(name) ?? Assets.cache.get(name);\n    if (!texture) {\n      throw new Error(`Texture '${name}' not found. Make sure it's loaded first.`);\n    }\n    return texture;\n  }\n\n  static hasTexture(name: string): boolean {\n    return AssetLoader.textureCache.has(name) || Assets.cache.has(name);\n  }\n\n  static async loadFont(name: string, fontPath: string, texturePath: string): Promise<void> {\n    try {\n      await Assets.load([\n        { alias: `${name}_texture`, src: texturePath },\n        { alias: name, src: fontPath },\n      ]);\n    } catch (error) {\n      console.error(`Failed to load bitmap font ${name}:`, error);\n      throw error;\n    }\n  }\n\n  static async loadAtlas(name: string, atlasPath: string): Promise<void> {\n    try {\n      await Assets.load({ alias: name, src: atlasPath });\n    } catch (error) {\n      console.error(`Failed to load texture atlas ${name}:`, error);\n      throw error;\n    }\n  }\n\n  static async loadEmojis(emojis: EmojiData[]): Promise<Map<string, Texture>> {\n    const emojiTextures = new Map<string, Texture>();\n\n    const loadPromises = emojis.map(async emoji => {\n      try {\n        const texture = await Assets.load<Texture>({\n          src: emoji.url,\n          loadParser: 'loadTextures',\n        });\n\n        emojiTextures.set(emoji.name, texture);\n        AssetLoader.textureCache.set(`emoji_${emoji.name}`, texture);\n      } catch (error) {\n        console.error(`Failed to load emoji texture for ${emoji.name} from ${emoji.url}:`, error);\n      }\n    });\n\n    await Promise.all(loadPromises);\n\n    return emojiTextures;\n  }\n\n  static async loadAvatars(avatars: AvatarData[]): Promise<Map<string, AvatarTexture>> {\n    const avatarTextures = new Map<string, AvatarTexture>();\n\n    const texture = await Assets.load<Texture>('assets/images/default_avatar.png');\n    AssetLoader.textureCache.set('default_avatar', texture);\n\n    const loadPromises = avatars.map(async avatar => {\n      try {\n        const texture = await Assets.load<Texture>({\n          src: avatar.url,\n          loadParser: 'loadTextures',\n        });\n\n        avatarTextures.set(avatar.name, {\n          position: avatar.position,\n          texture,\n        });\n        AssetLoader.textureCache.set(`avatar_${avatar.name}`, texture);\n      } catch (error) {\n        console.error(\n          `Failed to load avatar texture for ${avatar.name} from ${avatar.url}:`,\n          error\n        );\n      }\n    });\n\n    await Promise.all(loadPromises);\n\n    return avatarTextures;\n  }\n\n  static getEmojiTexture(name: string): Texture | undefined {\n    return AssetLoader.textureCache.get(`emoji_${name}`) ?? Assets.cache.get(`emoji_${name}`);\n  }\n\n  static getAvatarTexture(name: string): Texture | undefined {\n    return AssetLoader.textureCache.get(`avatar_${name}`) ?? Assets.cache.get(`avatar_${name}`);\n  }\n\n  static async loadMagicWordsAssets(): Promise<void> {\n    try {\n      // Fetch Magic Words data from API\n      const response = await fetch(\n        'https://private-624120-softgamesassignment.apiary-mock.com/v2/magicwords'\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch Magic Words data: ${response.status.toString()}`);\n      }\n\n      const data = (await response.json()) as MagicWordsData;\n\n      if (data.dialogue.length === 0) {\n        throw new Error('No dialogue data found in API response');\n      }\n\n      AssetLoader.magicWordsData = data;\n\n      await AssetLoader.loadEmojis(AssetLoader.magicWordsData.emojies);\n\n      AssetLoader.avatarTextures = await AssetLoader.loadAvatars(\n        AssetLoader.magicWordsData.avatars\n      );\n    } catch (error) {\n      console.error('Failed to load Magic Words assets:', error);\n      throw error;\n    }\n  }\n\n  static getMagicWordsData(): MagicWordsData | null {\n    return AssetLoader.magicWordsData;\n  }\n\n  static getAllEmojiTextures(): Map<string, Texture> {\n    const emojiTextures = new Map<string, Texture>();\n    for (const [key, texture] of AssetLoader.textureCache.entries()) {\n      if (key.startsWith('emoji_')) {\n        emojiTextures.set(key.substring(6), texture);\n      }\n    }\n    return emojiTextures;\n  }\n\n  static getAllAvatarTextures(): Map<string, AvatarTexture> {\n    if (AssetLoader.avatarTextures) {\n      return AssetLoader.avatarTextures;\n    } else {\n      const avatarTextures = new Map<string, AvatarTexture>();\n      for (const [key, texture] of AssetLoader.textureCache.entries()) {\n        if (key.startsWith('avatar_')) {\n          avatarTextures.set(key.substring(7), {\n            texture: texture,\n            position: 'left',\n          });\n        }\n      }\n      return avatarTextures;\n    }\n  }\n}\n","/**\n * This approach for the FireParticle effect tries to minimize sprite count\n * By replacing clusters of sprites with pre-generated images of particles\n * merging like metaballs\n *\n */\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { Container, Sprite } from 'pixi.js';\nimport { AssetLoader } from '../utils/AssetLoader';\n\ninterface FireMetaBallOptions {\n  max: number;\n  width: number;\n  height: number;\n  singlesCount?: number;\n  twoParticleCount?: number;\n  threeParticleCount?: number;\n  fourParticleCount?: number;\n  scatteredCount?: number;\n  asymmetricCount?: number;\n  mergeDistance?: number;\n  spawnInterval?: number;\n}\n\nclass FireMetaBallParticle {\n  private static nextId = 1;\n\n  public readonly id: number;\n  public x: number;\n  public y: number;\n  public vx: number;\n  public vy: number;\n  public life: number;\n  public maxLife: number;\n  public active: boolean;\n  public merged: boolean;\n\n  constructor(x: number, y: number) {\n    this.id = FireMetaBallParticle.nextId++;\n    this.x = x;\n    this.y = y;\n    this.active = true;\n    this.merged = false;\n\n    const angle = ((270 + (Math.random() - 0.5) * 30) * Math.PI) / 180;\n    const speed = 50 + Math.random() * 50;\n    this.vx = Math.cos(angle) * speed;\n    this.vy = Math.sin(angle) * speed;\n\n    this.maxLife = 2.0 + Math.random() * 2.0;\n    this.life = this.maxLife;\n  }\n\n  public update(dt: number): void {\n    if (!this.active) {\n      return;\n    }\n\n    this.x += this.vx * dt;\n    this.y += this.vy * dt;\n\n    this.vy -= 20 * dt;\n    this.vx += (Math.random() - 0.5) * 10 * dt;\n    this.vy += (Math.random() - 0.5) * 5 * dt;\n\n    this.vx *= 0.995;\n    this.vy *= 0.995;\n\n    this.life -= dt;\n    if (this.life <= 0) {\n      this.active = false;\n    }\n  }\n\n  public getAlpha(): number {\n    if (!this.active) {\n      return 0;\n    }\n    const a = this.life * 2;\n    return a < 1 ? a : 1;\n  }\n}\ninterface ParticleGroup {\n  key: string;\n  particles: FireMetaBallParticle[];\n  sprite: Sprite;\n  anchor: FireMetaBallParticle;\n}\n\nexport class FireMetaBallSystem extends Container {\n  private readonly maxSprites: number;\n  private readonly emitterWidth: number;\n  private readonly emitterHeight: number;\n\n  private readonly baseMergeDistance: number;\n\n  private spawnTimer: number;\n  private spawnInterval: number;\n\n  private readonly particles: FireMetaBallParticle[] = [];\n  private readonly singleSprites = new Map<FireMetaBallParticle, Sprite>();\n  private groups = new Map<string, ParticleGroup>();\n\n  constructor(opts: FireMetaBallOptions) {\n    super();\n    this.maxSprites = opts.max;\n    this.emitterWidth = opts.width;\n    this.emitterHeight = opts.height;\n\n    this.baseMergeDistance = opts.mergeDistance ?? 5;\n    this.spawnInterval = opts.spawnInterval ?? 0.15;\n    this.spawnTimer = 0;\n  }\n\n  public update(dt: number): void {\n    this.spawnTimer += dt;\n\n    for (const p of this.particles) {\n      p.update(dt);\n    }\n\n    this.cullDeadParticles();\n\n    const clusters = this.clusterToFitBudget();\n    this.reconcileVisuals(clusters);\n\n    this.maybeSpawn();\n\n    this.updateSingleSprites();\n    this.updateGroupSprites();\n  }\n\n  private scaleAtY(y: number): number {\n    const t = Math.max(0, Math.min(1, y / this.emitterHeight));\n    return 0.12 + t * 2;\n  }\n\n  private maybeSpawn(): void {\n    if (this.spawnTimer < this.spawnInterval) {\n      return;\n    }\n\n    const visual = this.getVisualSpriteCount();\n    if (visual < this.maxSprites) {\n      this.spawnInterval = visual > this.maxSprites - 3 ? 0.25 : 0.15;\n      this.spawnOne();\n    }\n\n    this.spawnTimer = 0;\n  }\n\n  private spawnOne(): void {\n    const angle = Math.random() * Math.PI * 2;\n    const radius = Math.random() * 30;\n    const x = this.emitterWidth / 2 + Math.cos(angle) * radius;\n\n    const baseBias = Math.random() * 0.5;\n    const verticalOffset = baseBias * baseBias * 15;\n    const y = this.emitterHeight - 10 - verticalOffset + Math.sin(angle) * radius * 0.3;\n\n    const p = new FireMetaBallParticle(x, y);\n    this.particles.push(p);\n\n    const sizes = ['xs', 's', 'm', 'l', 'xl', 'xxl'];\n    const size = sizes[Math.floor(Math.random() * sizes.length)];\n    const variation = 1 + Math.floor(Math.random() * 6);\n    const texture = AssetLoader.getTexture(`single_${size}_${variation}`);\n    const sprite = new Sprite(texture);\n    sprite.anchor.set(0.5);\n    sprite.x = p.x;\n    sprite.y = p.y;\n    sprite.rotation = Math.random() * Math.PI * 2;\n\n    this.singleSprites.set(p, sprite);\n    this.addChild(sprite);\n  }\n\n  private getVisualSpriteCount(): number {\n    let singles = 0;\n    for (const p of this.particles) {\n      if (p.active) {\n        singles += 1;\n      }\n    }\n    return singles + this.groups.size;\n  }\n\n  private cullDeadParticles(): void {\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      const p = this.particles[i];\n      if (!p || p.active) {\n        continue;\n      }\n      const s = this.singleSprites.get(p);\n      if (s && s.parent) {\n        this.removeChild(s);\n      }\n      this.singleSprites.delete(p);\n      this.particles.splice(i, 1);\n    }\n  }\n\n  private clusterToFitBudget(): FireMetaBallParticle[][] {\n    const actives = this.particles.filter(p => p.active);\n    if (actives.length === 0) {\n      return [];\n    }\n\n    const multipliers: readonly number[] = [1, 1.12, 1.4, 1.8, 2, 2.2];\n    let chosen: FireMetaBallParticle[][] = [];\n\n    for (const m of multipliers) {\n      const clusters = this.clusterParticles(actives, this.baseMergeDistance * m);\n      chosen = clusters;\n      if (clusters.length <= this.maxSprites) {\n        break;\n      }\n    }\n\n    return chosen;\n  }\n\n  private pickAnchor(comp: readonly FireMetaBallParticle[]): FireMetaBallParticle {\n    let best = comp[0]!;\n    let bestScore = -Infinity;\n    for (const p of comp) {\n      const yNorm = Math.max(0, Math.min(1, p.y / this.emitterHeight));\n      const score = yNorm * 0.65 + p.getAlpha() * 0.35;\n      if (score > bestScore) {\n        bestScore = score;\n        best = p;\n      }\n    }\n    return best;\n  }\n\n  private clusterParticles(\n    particles: readonly FireMetaBallParticle[],\n    threshold: number\n  ): FireMetaBallParticle[][] {\n    const cell = threshold;\n    const keyOf = (x: number, y: number): string => {\n      const cx = Math.floor(x / cell);\n      const cy = Math.floor(y / cell);\n      return `${cx},${cy}`;\n    };\n\n    const buckets = new Map<string, FireMetaBallParticle[]>();\n    for (const p of particles) {\n      const k = keyOf(p.x, p.y);\n      const list = buckets.get(k);\n      if (list === undefined) {\n        buckets.set(k, [p]);\n      } else {\n        list.push(p);\n      }\n    }\n\n    const visited = new Set<number>();\n    const clusters: FireMetaBallParticle[][] = [];\n\n    const candidates = (px: number, py: number): FireMetaBallParticle[] => {\n      const cx = Math.floor(px / cell);\n      const cy = Math.floor(py / cell);\n      const out: FireMetaBallParticle[] = [];\n      for (let oy = -1; oy <= 1; oy++) {\n        for (let ox = -1; ox <= 1; ox++) {\n          const list = buckets.get(`${cx + ox},${cy + oy}`);\n          if (list !== undefined) {\n            out.push(...list);\n          }\n        }\n      }\n      return out;\n    };\n\n    for (const seed of particles) {\n      if (visited.has(seed.id)) {\n        continue;\n      }\n\n      let sumX = seed.x;\n      let sumY = seed.y;\n      let count = 1;\n      let cx = seed.x;\n      let cy = seed.y;\n\n      const comp: FireMetaBallParticle[] = [seed];\n      visited.add(seed.id);\n\n      const stack: FireMetaBallParticle[] = [seed];\n\n      const COHESION = 1.0;\n\n      while (stack.length > 0) {\n        const cur = stack.pop() as FireMetaBallParticle;\n\n        for (const nb of candidates(cur.x, cur.y)) {\n          if (visited.has(nb.id) || nb.id === cur.id) {\n            continue;\n          }\n\n          const dx = cur.x - nb.x;\n          const dy = cur.y - nb.y;\n          const d2 = dx * dx + dy * dy;\n\n          const pairScale = Math.max(this.scaleAtY(cur.y), this.scaleAtY(nb.y));\n          const pairThr = threshold * pairScale;\n          const pairThr2 = pairThr * pairThr;\n          if (d2 > pairThr2) {\n            continue;\n          }\n\n          const cxScale = this.scaleAtY(cy);\n          const bottomBias = 1 + (cy / this.emitterHeight) * 0.8;\n          const cohThr = threshold * COHESION * cxScale * bottomBias;\n          const dcx = nb.x - cx;\n          const dcy = nb.y - cy;\n          if (dcx * dcx + dcy * dcy > cohThr * cohThr) {\n            continue;\n          }\n\n          visited.add(nb.id);\n          comp.push(nb);\n\n          sumX += nb.x;\n          sumY += nb.y;\n          count += 1;\n          cx = sumX / count;\n          cy = sumY / count;\n\n          stack.push(nb);\n        }\n      }\n\n      clusters.push(comp);\n    }\n\n    return clusters;\n  }\n\n  private reconcileVisuals(clusters: readonly FireMetaBallParticle[][]): void {\n    for (const p of this.particles) {\n      p.merged = false;\n    }\n\n    const next = new Map<string, ParticleGroup>();\n\n    for (const comp of clusters) {\n      if (comp.length <= 1) {\n        continue;\n      }\n\n      const key = this.keyFor(comp);\n      let grp = this.groups.get(key);\n\n      const anchor = this.pickAnchor(comp);\n\n      if (grp === undefined) {\n        const texName = this.pickMergeTexture(comp);\n        const sprite = new Sprite(AssetLoader.getTexture(texName));\n        sprite.anchor.set(0.5);\n        sprite.x = anchor.x;\n        sprite.y = anchor.y;\n\n        grp = { key, particles: comp, sprite, anchor };\n        this.addChild(sprite);\n      } else {\n        grp.particles = comp;\n        grp.anchor = anchor;\n      }\n\n      for (const p of comp) {\n        p.merged = true;\n        const s = this.singleSprites.get(p);\n        if (s !== undefined) {\n          s.visible = false;\n        }\n      }\n\n      next.set(key, grp);\n    }\n\n    for (const [key, g] of this.groups) {\n      if (!next.has(key) && g.sprite.parent) {\n        this.removeChild(g.sprite);\n      }\n    }\n\n    this.groups = next;\n\n    for (const p of this.particles) {\n      if (!p.active) {\n        continue;\n      }\n      const s = this.singleSprites.get(p);\n      if (s !== undefined) {\n        s.visible = !p.merged;\n      }\n    }\n  }\n\n  private keyFor(comp: readonly FireMetaBallParticle[]): string {\n    const ids = comp.map(p => p.id).sort((a, b) => a - b);\n    return ids.join(',');\n  }\n\n  private updateSingleSprites(): void {\n    for (const [p, s] of this.singleSprites) {\n      if (!p.active || p.merged) {\n        continue;\n      }\n      s.x = p.x;\n      s.y = p.y;\n      s.alpha = p.getAlpha();\n      s.blendMode = 1;\n\n      const progress = (1 - p.life / p.maxLife) ** 2;\n      const baseScale = Math.max(0.1, 4 - progress * 3.8);\n\n      const heightProgress = p.y / this.emitterHeight;\n      const horizontalScale = 0.3 + heightProgress * 0.7;\n\n      s.scale.set(baseScale * horizontalScale, baseScale);\n    }\n  }\n\n  private updateGroupSprites(): void {\n    for (const grp of this.groups.values()) {\n      let anchor = grp.anchor;\n      if (!anchor.active) {\n        anchor = this.pickAnchor(grp.particles);\n        grp.anchor = anchor;\n      }\n\n      let sa = 0;\n      let n = 0;\n      for (const p of grp.particles) {\n        if (!p.active) {\n          continue;\n        }\n        sa += p.getAlpha();\n        n += 1;\n      }\n      if (n === 0) {\n        if (grp.sprite.parent) {\n          this.removeChild(grp.sprite);\n        }\n        continue;\n      }\n\n      grp.sprite.x = anchor.x;\n      grp.sprite.y = anchor.y;\n      grp.sprite.alpha = sa / n;\n      grp.sprite.blendMode = 1;\n\n      const progress = Math.max(0, (this.emitterHeight - anchor.y) / this.emitterHeight);\n      const baseScale = Math.max(0.2, 4.2 - progress * 4);\n\n      const heightProgress = anchor.y / this.emitterHeight;\n      const horizontalScale = 0.3 + heightProgress * 0.7;\n\n      grp.sprite.scale.set(baseScale * horizontalScale, baseScale);\n    }\n  }\n\n  private pickMergeTexture(particles: readonly FireMetaBallParticle[]): string {\n    const count = particles.length;\n\n    const pickSingle = (): string => {\n      const sizes = ['xs', 's', 'm', 'l', 'xl', 'xxl'];\n      const size = sizes[Math.floor(Math.random() * sizes.length)];\n      const variation = 1 + Math.floor(Math.random() * 6);\n      return `single_${size}_${variation}`;\n    };\n\n    if (count === 2) {\n      const p1 = particles[0];\n      const p2 = particles[1];\n      if (p1 === undefined || p2 === undefined) {\n        return pickSingle();\n      }\n\n      const dx = Math.abs(p1.x - p2.x);\n      const dy = Math.abs(p1.y - p2.y);\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      let configType: string;\n\n      if (dx > dy * 1.8) {\n        if (distance < 15) configType = 'h2_close';\n        else if (distance < 30) configType = 'h2_mid';\n        else configType = 'h2_far';\n      } else if (dy > dx * 1.8) {\n        if (distance < 15) configType = 'v2_close';\n        else if (distance < 30) configType = 'v2_mid';\n        else configType = 'v2_far';\n      } else {\n        const angle = (Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180) / Math.PI;\n        const normalizedAngle = (angle + 360) % 360;\n\n        if (normalizedAngle >= 315 || normalizedAngle < 45) {\n          configType = Math.random() < 0.7 ? 'a2_30' : 'a2_150';\n        } else if (normalizedAngle >= 45 && normalizedAngle < 135) {\n          configType = Math.random() < 0.5 ? 'd2_ne' : 'd2_se';\n        } else if (normalizedAngle >= 135 && normalizedAngle < 225) {\n          configType = Math.random() < 0.7 ? 'a2_60' : 'a2_120';\n        } else {\n          configType = Math.random() < 0.5 ? 'd2_nw' : 'd2_sw';\n        }\n\n        if (distance < 8) {\n          configType = Math.random() < 0.6 ? 'o2_heavy' : 'o2_slight';\n        } else if (distance < 12) {\n          configType = Math.random() < 0.3 ? 'o2_slight' : configType;\n        }\n      }\n\n      const variation = 1 + Math.floor(Math.random() * 4);\n      return `merge_${configType}_${variation}`;\n    }\n\n    if (count === 3) {\n      const configs = [\n        'tri3_eq',\n        'tri3_iso',\n        'tri3_right',\n        'tri3_acute',\n        'lin3_h_close',\n        'lin3_h_far',\n        'lin3_v_close',\n        'lin3_v_far',\n        'lin3_diag',\n        'lin3_antidiag',\n        'l3_ne',\n        'l3_nw',\n        'l3_se',\n        'l3_sw',\n        'arc3_top',\n        'arc3_bottom',\n        'arc3_left',\n        'arc3_right',\n        'v3_up',\n        'v3_down',\n        'v3_left',\n        'v3_right',\n      ];\n\n      const configType = configs[Math.floor(Math.random() * configs.length)];\n      const variation = 1 + Math.floor(Math.random() * 4);\n      return `merge_${configType}_${variation}`;\n    }\n\n    if (count === 4) {\n      const configs = [\n        'cross4',\n        'plus4',\n        'cross4_diag',\n        'square4',\n        'rect4_h',\n        'rect4_v',\n        'diamond4',\n        'line4_h',\n        'line4_v',\n        'line4_diag',\n        't4_up',\n        't4_down',\n        't4_left',\n        't4_right',\n      ];\n\n      const configType = configs[Math.floor(Math.random() * configs.length)];\n      const variation = 1 + Math.floor(Math.random() * 4);\n      return `merge_${configType}_${variation}`;\n    }\n\n    if (count === 5) {\n      const configs = ['cluster5', 'star5', 'x5'];\n      const configType = configs[Math.floor(Math.random() * configs.length)];\n      const variation = 1 + Math.floor(Math.random() * 4);\n      return `merge_${configType}_${variation}`;\n    }\n\n    if (count === 6) {\n      const configs = ['hex6', 'flower6', 'grid6'];\n      const configType = configs[Math.floor(Math.random() * configs.length)];\n      const variation = 1 + Math.floor(Math.random() * 4);\n      return `merge_${configType}_${variation}`;\n    }\n\n    if (count >= 7) {\n      const configs = ['circle7', 'burst8'];\n      const configType = configs[Math.floor(Math.random() * configs.length)];\n      const variation = 1 + Math.floor(Math.random() * 4);\n      return `merge_${configType}_${variation}`;\n    }\n\n    if (Math.random() < 0.3) {\n      const scatterConfigs = [\n        'scatter3',\n        'scatter4',\n        'scatter5',\n        'scatter6',\n        'scatter7',\n        'scatter8',\n        'scatter9',\n        'scatter10',\n      ];\n      const configType = scatterConfigs[Math.floor(Math.random() * scatterConfigs.length)];\n      const variation = 1 + Math.floor(Math.random() * 5);\n      return `${configType}_${variation}`;\n    }\n\n    if (Math.random() < 0.2) {\n      const asymConfigs = [\n        'tear_up',\n        'tear_down',\n        'tear_left',\n        'tear_right',\n        'comet_ne',\n        'comet_nw',\n        'comet_se',\n        'comet_sw',\n        'flame_tall',\n        'flame_wide',\n        'flame_left',\n        'flame_right',\n        'wave_h',\n        'wave_v',\n        'wave_s',\n      ];\n      const configType = asymConfigs[Math.floor(Math.random() * asymConfigs.length)];\n      const variation = 1 + Math.floor(Math.random() * 3);\n      return `asym_${configType}_${variation}`;\n    }\n\n    return pickSingle();\n  }\n\n  public override destroy(): void {\n    for (const s of this.singleSprites.values()) {\n      if (s.parent) {\n        s.parent.removeChild(s);\n      }\n    }\n    this.singleSprites.clear();\n\n    for (const g of this.groups.values()) {\n      if (g.sprite.parent) {\n        g.sprite.parent.removeChild(g.sprite);\n      }\n    }\n    this.groups.clear();\n\n    this.particles.length = 0;\n\n    super.destroy();\n  }\n}\n","import { BitmapText } from 'pixi.js';\nimport { BaseScene } from './BaseScene';\nimport { FireMetaBallSystem } from '@/components/FireMetaBallSystem';\nimport { Colors } from '../utils/Colors';\n\nexport class PhoenixFlameScene extends BaseScene {\n  public readonly name = 'PhoenixFlame';\n\n  private titleText: BitmapText;\n  private animationTime = 0;\n  private fireMetaBallSystem!: FireMetaBallSystem;\n\n  constructor() {\n    super();\n    this.titleText = new BitmapText('Phoenix Flame', {\n      fontName: 'MonospaceBold',\n      fontSize: 28,\n    });\n  }\n\n  init(): void {\n    this.setupFire();\n    this.setupTexts();\n    this.initialized = true;\n  }\n\n  private setupTexts(): void {\n    this.titleText.tint = Colors.WHITE;\n    this.titleText.anchor.set(0.5, 0);\n    this.titleText.x = this.screenWidth / 2;\n    this.titleText.y = 40;\n\n    this.container.addChild(this.titleText);\n  }\n\n  private setupFire(): void {\n    this.fireMetaBallSystem = new FireMetaBallSystem({ max: 10, width: 400, height: 400 });\n    this.fireMetaBallSystem.pivot.set(200, 0);\n\n    this.container.addChild(this.fireMetaBallSystem);\n  }\n\n  update(deltaTime: number): void {\n    this.animationTime += deltaTime * 0.02;\n    this.fireMetaBallSystem.update(deltaTime / 1000);\n  }\n\n  protected override onResize(width: number, _: number): void {\n    this.titleText.x = width / 2;\n\n    this.fireMetaBallSystem.x = width / 2;\n  }\n}\n","import { Sprite } from 'pixi.js';\nimport { AssetLoader } from '../utils/AssetLoader';\n\nexport class PlayingCard extends Sprite {\n  private static readonly AVAILABLE_CARDS = [\n    'ace_of_spades2',\n    '2_of_spades',\n    '3_of_spades',\n    '4_of_spades',\n    '5_of_spades',\n    '6_of_spades',\n    '7_of_spades',\n    '8_of_spades',\n    '9_of_spades',\n    '10_of_spades',\n    'jack_of_spades2',\n    'queen_of_spades2',\n    'king_of_spades2',\n    'ace_of_hearts',\n    '2_of_hearts',\n    '3_of_hearts',\n    '4_of_hearts',\n    '5_of_hearts',\n    '6_of_hearts',\n    '7_of_hearts',\n    '8_of_hearts',\n    '9_of_hearts',\n    '10_of_hearts',\n    'jack_of_hearts2',\n    'queen_of_hearts2',\n    'king_of_hearts2',\n    'ace_of_diamonds',\n    '2_of_diamonds',\n    '3_of_diamonds',\n    '4_of_diamonds',\n    '5_of_diamonds',\n    '6_of_diamonds',\n    '7_of_diamonds',\n    '8_of_diamonds',\n    '9_of_diamonds',\n    '10_of_diamonds',\n    'jack_of_diamonds2',\n    'queen_of_diamonds2',\n    'king_of_diamonds2',\n    'ace_of_clubs',\n    '2_of_clubs',\n    '3_of_clubs',\n    '4_of_clubs',\n    '5_of_clubs',\n    '6_of_clubs',\n    '7_of_clubs',\n    '8_of_clubs',\n    '9_of_clubs',\n    '10_of_clubs',\n    'jack_of_clubs2',\n    'queen_of_clubs2',\n    'king_of_clubs2',\n    'black_joker',\n    'red_joker',\n  ];\n\n  public readonly cardNumber: number;\n  public currentStackIndex = 0;\n  public positionInStack = 0;\n\n  constructor(cardNumber: number) {\n    const textureIndex = (cardNumber - 1) % PlayingCard.AVAILABLE_CARDS.length;\n    const textureName = PlayingCard.AVAILABLE_CARDS[textureIndex] ?? 'red_joker';\n    const texture = AssetLoader.getTexture(textureName);\n\n    super(texture);\n\n    this.cardNumber = cardNumber;\n    this.anchor.set(0.5);\n\n    this.scale.set(0.15);\n  }\n\n  setStackPosition(stackIndex: number, positionInStack: number): void {\n    this.currentStackIndex = stackIndex;\n    this.positionInStack = positionInStack;\n  }\n}\n","import { BitmapText } from 'pixi.js';\nimport * as TWEEN from '@tweenjs/tween.js';\nimport { BaseScene } from './BaseScene';\nimport { PlayingCard } from '../components/PlayingCard';\nimport { Colors } from '../utils/Colors';\n\nexport class AceOfShadowsScene extends BaseScene {\n  public readonly name = 'Ace of Shadows';\n\n  private static readonly TOTAL_CARDS = 144;\n  private static readonly CARD_OFFSET_X = 1;\n  private static readonly CARD_OFFSET_Y = 2.7;\n  private static readonly ANIMATION_INTERVAL = 1000;\n  private static readonly ANIMATION_DURATION = 2000;\n  private static readonly DEFAULT_SPEED_MULTIPLIER = 1.0;\n\n  private titleText: BitmapText;\n  private cards: PlayingCard[] = [];\n  private speedMultiplier = AceOfShadowsScene.DEFAULT_SPEED_MULTIPLIER;\n\n  private tweenGroup: TWEEN.Group;\n\n  private sourceStackCards: PlayingCard[] = [];\n  private destinationStackCards: PlayingCard[] = [];\n  private animationTimer = 0;\n  private isAnimating = false;\n  private animationComplete = false;\n  private activeTween: TWEEN.Tween | null = null;\n  private animatingCard: PlayingCard | null = null;\n\n  private sourceStackPosition = { x: 0, y: 0 };\n  private destinationStackPosition = { x: 0, y: 0 };\n\n  constructor() {\n    super();\n    this.titleText = new BitmapText('Ace of Shadows', { fontName: 'MonospaceBold', fontSize: 28 });\n    this.tweenGroup = new TWEEN.Group();\n    this.container.sortableChildren = true;\n  }\n\n  init(): void {\n    this.setupTitle();\n    this.createCards();\n    this.calculateStackPositions();\n    this.arrangeCards();\n    this.initialized = true;\n  }\n\n  private setupTitle(): void {\n    this.titleText.tint = Colors.WHITE;\n    this.titleText.anchor.set(0.5, 0);\n    this.titleText.x = this.screenWidth / 2;\n    this.titleText.y = 40;\n    this.container.addChild(this.titleText);\n  }\n\n  private createCards(): void {\n    for (let i = 1; i <= AceOfShadowsScene.TOTAL_CARDS; i++) {\n      const card = new PlayingCard(i);\n      // All cards start in source stack (index 0)\n      card.setStackPosition(0, i - 1);\n      this.cards.push(card);\n      this.sourceStackCards.push(card);\n      this.container.addChild(card);\n    }\n  }\n\n  private calculateStackPositions(): void {\n    // Source stack: left side\n    this.sourceStackPosition.x = this.screenWidth / 2 - 100;\n    this.sourceStackPosition.y = this.screenHeight / 2 - 200;\n\n    // Destination stack: right side\n    this.destinationStackPosition.x = this.screenWidth / 2 + 200;\n    this.destinationStackPosition.y = this.screenHeight / 2 - 200;\n  }\n\n  private arrangeCards(): void {\n    this.arrangeStack(this.sourceStackCards, this.sourceStackPosition);\n    this.arrangeStack(this.destinationStackCards, this.destinationStackPosition);\n  }\n\n  private arrangeStack(stackCards: PlayingCard[], stackPosition: { x: number; y: number }): void {\n    for (let i = 0; i < stackCards.length; i++) {\n      const card = stackCards[i];\n      if (!card) {\n        continue;\n      }\n      card.x = stackPosition.x + i * AceOfShadowsScene.CARD_OFFSET_X;\n      card.y = stackPosition.y + i * AceOfShadowsScene.CARD_OFFSET_Y;\n      card.zIndex = i;\n    }\n  }\n\n  update(deltaTime: number): void {\n    this.tweenGroup.update();\n    this.animationTimer += deltaTime;\n\n    // Handle timer for next card animation (only if source stack has cards and not currently animating)\n    if (this.sourceStackCards.length > 0 && !this.isAnimating) {\n      const adjustedInterval = AceOfShadowsScene.ANIMATION_INTERVAL / this.speedMultiplier;\n      if (this.animationTimer >= adjustedInterval) {\n        this.animateNextCard();\n        this.animationTimer = 0;\n      }\n    } else if (this.sourceStackCards.length === 0 && !this.isAnimating && !this.animationComplete) {\n      // All cards have been moved - animation sequence complete\n      this.animationComplete = true;\n      this.onAllCardsTransferred();\n    }\n  }\n\n  private onAllCardsTransferred(): void {\n    console.log('All cards have been transferred to destination stack');\n  }\n\n  private animateNextCard(): void {\n    if (this.sourceStackCards.length === 0 || this.isAnimating) {\n      return;\n    }\n\n    const cardToMove = this.sourceStackCards.pop();\n    if (!cardToMove) {\n      return;\n    }\n\n    this.isAnimating = true;\n    this.animatingCard = cardToMove;\n\n    // Calculate destination position in destination stack\n    const destIndex = this.destinationStackCards.length;\n    const destX = this.destinationStackPosition.x + destIndex * AceOfShadowsScene.CARD_OFFSET_X;\n    const destY = this.destinationStackPosition.y + destIndex * AceOfShadowsScene.CARD_OFFSET_Y;\n\n    // Set high z-index for card during animation\n    cardToMove.zIndex = 1000 + destIndex;\n\n    const startRotation = cardToMove.rotation;\n    const targetRotation = startRotation + (Math.random() - 0.5) * 0.2;\n\n    interface AnimationCoords {\n      x: number;\n      y: number;\n      rotation: number;\n    }\n\n    this.activeTween = new TWEEN.Tween({\n      x: cardToMove.x,\n      y: cardToMove.y,\n      rotation: startRotation,\n    } as AnimationCoords)\n      .to(\n        {\n          x: destX,\n          y: destY,\n          rotation: targetRotation,\n        } as AnimationCoords,\n        AceOfShadowsScene.ANIMATION_DURATION / this.speedMultiplier\n      )\n      .easing(TWEEN.Easing.Sinusoidal.InOut)\n      .onUpdate((coords: AnimationCoords) => {\n        cardToMove.x = coords.x;\n        cardToMove.y = coords.y;\n        cardToMove.rotation = coords.rotation;\n      })\n      .onComplete(() => {\n        this.destinationStackCards.push(cardToMove);\n        cardToMove.setStackPosition(1, destIndex);\n        cardToMove.zIndex = this.destinationStackCards.length - 1;\n\n        // reset rotation with a tween\n        this.tweenGroup.add(\n          new TWEEN.Tween({ rotation: cardToMove.rotation })\n            .to({ rotation: 0 }, 500)\n            .easing(TWEEN.Easing.Back.Out)\n            .onUpdate((coords: { rotation: number }) => {\n              cardToMove.rotation = coords.rotation;\n            })\n            .start()\n        );\n\n        this.isAnimating = false;\n        this.activeTween = null;\n        this.animatingCard = null;\n      })\n      .start();\n\n    this.tweenGroup.add(this.activeTween);\n  }\n\n  protected override onResize(width: number, _height: number): void {\n    this.titleText.x = width / 2;\n\n    // Recalculate stack positions based on new dimensions\n    this.calculateStackPositions();\n\n    // If there's an active animation, we need to update its target\n    if (this.activeTween && this.animatingCard) {\n      this.activeTween.stop();\n\n      const destIndex = this.destinationStackCards.length;\n      const newDestX =\n        this.destinationStackPosition.x + destIndex * AceOfShadowsScene.CARD_OFFSET_X;\n      const newDestY =\n        this.destinationStackPosition.y + destIndex * AceOfShadowsScene.CARD_OFFSET_Y;\n\n      const cardToMove = this.animatingCard;\n      const currentRotation = cardToMove.rotation;\n\n      interface AnimationCoords {\n        x: number;\n        y: number;\n        rotation: number;\n      }\n\n      this.activeTween = new TWEEN.Tween({\n        x: cardToMove.x,\n        y: cardToMove.y,\n        rotation: currentRotation,\n      } as AnimationCoords)\n        .to(\n          {\n            x: newDestX,\n            y: newDestY,\n            rotation: currentRotation,\n          } as AnimationCoords,\n          AceOfShadowsScene.ANIMATION_DURATION / this.speedMultiplier\n        )\n        .easing(TWEEN.Easing.Sinusoidal.InOut)\n        .onUpdate((coords: AnimationCoords) => {\n          cardToMove.x = coords.x;\n          cardToMove.y = coords.y;\n          cardToMove.rotation = coords.rotation;\n        })\n        .onComplete(() => {\n          this.destinationStackCards.push(cardToMove);\n          cardToMove.setStackPosition(1, destIndex);\n          cardToMove.zIndex = this.destinationStackCards.length - 1;\n\n          this.tweenGroup.add(\n            new TWEEN.Tween({ rotation: cardToMove.rotation })\n              .to({ rotation: 0 }, 500)\n              .easing(TWEEN.Easing.Back.Out)\n              .onUpdate((coords: { rotation: number }) => {\n                cardToMove.rotation = coords.rotation;\n              })\n              .start()\n          );\n\n          this.isAnimating = false;\n          this.activeTween = null;\n          this.animatingCard = null;\n        })\n        .start();\n\n      this.tweenGroup.add(this.activeTween);\n    }\n\n    this.arrangeCards();\n  }\n\n  setSpeedMultiplier(multiplier: number): void {\n    this.speedMultiplier = Math.max(0.1, multiplier);\n  }\n\n  getSpeedMultiplier(): number {\n    return this.speedMultiplier;\n  }\n\n  override destroy(): void {\n    if (this.activeTween) {\n      this.activeTween.stop();\n      this.activeTween = null;\n    }\n    this.animatingCard = null;\n    this.isAnimating = false;\n\n    this.tweenGroup.removeAll();\n\n    super.destroy();\n  }\n}\n","import { Container, BitmapText, Sprite, Texture } from 'pixi.js';\n\ninterface TextSegment {\n  type: 'text' | 'emoji';\n  content: string;\n  x: number;\n  y: number;\n  width: number;\n}\n\nexport class TextWithInlineImages extends Container {\n  private static readonly EMOJI_SIZE = 24;\n  private static readonly LINE_HEIGHT = 32;\n  private static readonly MAX_WIDTH = 600;\n\n  private textSegments: TextSegment[] = [];\n  private emojiTextures = new Map<string, Texture>();\n  private displayObjects: (BitmapText | Sprite)[] = [];\n  private spaceWidth: number;\n\n  constructor(\n    private text: string,\n    emojiTextures: Map<string, Texture>,\n    private fontName = 'MonospaceBold',\n    private fontSize = 20,\n    private maxWidth: number = TextWithInlineImages.MAX_WIDTH\n  ) {\n    super();\n\n    this.emojiTextures = emojiTextures;\n    this.spaceWidth = this.measureTextWidth('  ');\n\n    this.parseAndLayoutText();\n    this.createDisplayObjects();\n  }\n\n  private parseAndLayoutText(): void {\n    this.textSegments = [];\n\n    const tokenRegex = /\\{([^}]+)\\}/g;\n    const parts: { type: 'text' | 'emoji'; content: string }[] = [];\n    let lastIndex = 0;\n    let match;\n\n    while ((match = tokenRegex.exec(this.text)) !== null) {\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: this.text.slice(lastIndex, match.index),\n        });\n      }\n\n      parts.push({\n        type: 'emoji',\n        content: match[1] ?? '',\n      });\n\n      lastIndex = match.index + match[0].length;\n    }\n\n    if (lastIndex < this.text.length) {\n      parts.push({\n        type: 'text',\n        content: this.text.slice(lastIndex),\n      });\n    }\n\n    this.layoutParts(parts);\n  }\n\n  private layoutParts(parts: { type: 'text' | 'emoji'; content: string }[]): void {\n    let currentX = 0;\n    let currentY = 0;\n    const lineHeight = TextWithInlineImages.LINE_HEIGHT;\n\n    for (const part of parts) {\n      if (part.type === 'text' && part.content) {\n        const words = part.content.split(' ');\n\n        for (let i = 0; i < words.length; i++) {\n          const word = words[i];\n          if (!word) {\n            continue;\n          }\n\n          const wordWithSpace = i < words.length - 1 ? word + ' ' : word;\n          const wordWidth = this.measureTextWidth(wordWithSpace);\n\n          if (currentX + wordWidth > this.maxWidth && currentX > 0) {\n            currentX = 0;\n            currentY += lineHeight;\n          }\n\n          this.textSegments.push({\n            type: 'text',\n            content: wordWithSpace,\n            x: currentX,\n            y: currentY,\n            width: wordWidth,\n          });\n\n          currentX += wordWidth + this.spaceWidth;\n        }\n      } else if (part.type === 'emoji') {\n        const emojiSize = TextWithInlineImages.EMOJI_SIZE;\n\n        if (currentX + emojiSize > this.maxWidth && currentX > 0) {\n          currentX = 0;\n          currentY += lineHeight;\n        }\n\n        this.textSegments.push({\n          type: 'emoji',\n          content: part.content,\n          x: currentX,\n          y: currentY,\n          width: emojiSize,\n        });\n\n        currentX += emojiSize + this.spaceWidth;\n      }\n    }\n  }\n\n  private measureTextWidth(text: string): number {\n    const tempText = new BitmapText(text, {\n      fontName: this.fontName,\n      fontSize: this.fontSize,\n    });\n\n    const width = tempText.width;\n    tempText.destroy();\n    return width;\n  }\n\n  private createDisplayObjects(): void {\n    this.clearDisplayObjects();\n\n    for (const segment of this.textSegments) {\n      if (segment.type === 'text') {\n        const textObj = new BitmapText(segment.content, {\n          fontName: this.fontName,\n          fontSize: this.fontSize,\n        });\n\n        textObj.x = segment.x;\n        textObj.y = segment.y;\n\n        this.addChild(textObj);\n        this.displayObjects.push(textObj);\n      } else {\n        const texture = this.emojiTextures.get(segment.content);\n        if (texture) {\n          const sprite = new Sprite(texture);\n          sprite.x = segment.x;\n          sprite.y = segment.y;\n          sprite.width = TextWithInlineImages.EMOJI_SIZE;\n          sprite.height = TextWithInlineImages.EMOJI_SIZE;\n\n          this.addChild(sprite);\n          this.displayObjects.push(sprite);\n        }\n      }\n    }\n  }\n\n  private clearDisplayObjects(): void {\n    for (const obj of this.displayObjects) {\n      this.removeChild(obj);\n      obj.destroy();\n    }\n    this.displayObjects = [];\n  }\n\n  public updateText(newText: string): void {\n    this.text = newText;\n    this.parseAndLayoutText();\n    this.createDisplayObjects();\n  }\n\n  public updateMaxWidth(newMaxWidth: number): void {\n    this.maxWidth = newMaxWidth;\n    this.parseAndLayoutText();\n    this.createDisplayObjects();\n  }\n\n  public getContentHeight(): number {\n    if (this.textSegments.length === 0) {\n      return 0;\n    }\n\n    const maxY = Math.max(...this.textSegments.map(s => s.y));\n    return maxY + TextWithInlineImages.LINE_HEIGHT;\n  }\n\n  public override destroy(): void {\n    this.clearDisplayObjects();\n    super.destroy({ children: true });\n  }\n}\n","import { Container, Sprite, Texture, Graphics, BitmapText } from 'pixi.js';\nimport { AvatarTexture, DialogueEntry } from '../types';\nimport { TextWithInlineImages } from './TextWithInlineImages';\nimport { Colors } from '../utils/Colors';\nimport { AssetLoader } from '../utils/AssetLoader';\n\nexport class DialogueComponent extends Container {\n  private static readonly AVATAR_SIZE = 80;\n  private static readonly DIALOGUE_BOX_HEIGHT = 120;\n  private static readonly DIALOGUE_BOX_PADDING = 20;\n  private static readonly AVATAR_MARGIN = 20;\n\n  private dialogueEntries: DialogueEntry[] = [];\n  private emojiTextures = new Map<string, Texture>();\n  private avatarTextures = new Map<string, AvatarTexture>();\n\n  private currentDialogueIndex = 0;\n  private screenWidth = 0;\n  private screenHeight = 0;\n\n  private dialogueBox!: Graphics;\n  private currentTextComponent: TextWithInlineImages | null = null;\n  private currentAvatarSprite: Sprite | null = null;\n  private currentAvatarName: BitmapText | null = null;\n  private isReady = false;\n\n  constructor(\n    dialogueEntries: DialogueEntry[],\n    emojiTextures: Map<string, Texture>,\n    avatarTextures: Map<string, AvatarTexture>\n  ) {\n    super();\n\n    this.dialogueEntries = dialogueEntries;\n    this.emojiTextures = emojiTextures;\n    this.avatarTextures = avatarTextures;\n\n    this.createDialogueBox();\n    this.isReady = true;\n    this.displayCurrentDialogue();\n  }\n\n  private createDialogueBox(): void {\n    this.dialogueBox = new Graphics();\n    this.dialogueBox.beginFill(Colors.BLACK, 0.8);\n    this.dialogueBox.lineStyle(2, Colors.WHITE, 1);\n    this.dialogueBox.drawRoundedRect(0, 0, 100, 100, 10); // Will be resized later\n    this.dialogueBox.endFill();\n    this.addChild(this.dialogueBox);\n  }\n\n  private displayCurrentDialogue(): void {\n    if (!this.isReady || this.currentDialogueIndex >= this.dialogueEntries.length) {\n      return;\n    }\n\n    const currentEntry = this.dialogueEntries[this.currentDialogueIndex];\n    if (!currentEntry) {\n      return;\n    }\n\n    const characterName = currentEntry.name;\n\n    this.clearCurrentDisplay();\n    this.updateDialogueBox();\n    this.displayAvatar(characterName);\n    this.displayText(currentEntry.text, 'left');\n  }\n\n  private clearCurrentDisplay(): void {\n    if (this.currentTextComponent) {\n      this.removeChild(this.currentTextComponent);\n      this.currentTextComponent.destroy();\n      this.currentTextComponent = null;\n    }\n\n    if (this.currentAvatarSprite) {\n      this.removeChild(this.currentAvatarSprite);\n      this.currentAvatarSprite.destroy();\n      this.currentAvatarSprite = null;\n    }\n\n    if (this.currentAvatarName) {\n      this.removeChild(this.currentAvatarName);\n      this.currentAvatarName.destroy();\n      this.currentAvatarName = null;\n    }\n  }\n\n  private getDialogueBoxWidth(): number {\n    return this.screenWidth - 40;\n  }\n\n  private updateDialogueBox(): void {\n    const boxWidth = this.getDialogueBoxWidth();\n    const boxHeight = DialogueComponent.DIALOGUE_BOX_HEIGHT;\n    const boxX = 20;\n    const boxY = this.screenHeight - boxHeight - 20;\n\n    this.dialogueBox.clear();\n    this.dialogueBox.beginFill(Colors.BLACK, 0.8);\n    this.dialogueBox.lineStyle(2, Colors.WHITE, 1);\n    this.dialogueBox.drawRoundedRect(boxX, boxY, boxWidth, boxHeight, 10);\n    this.dialogueBox.endFill();\n  }\n\n  private displayAvatar(characterName: string): void {\n    const boxY = this.screenHeight - DialogueComponent.DIALOGUE_BOX_HEIGHT - 20;\n\n    const avatarTexture = this.avatarTextures.get(characterName) ?? {\n      texture: AssetLoader.getTexture('default_avatar'),\n      position: 'left',\n    };\n\n    const avatarX =\n      avatarTexture.position === 'left'\n        ? DialogueComponent.AVATAR_MARGIN\n        : this.getDialogueBoxWidth() -\n          DialogueComponent.AVATAR_MARGIN -\n          DialogueComponent.AVATAR_SIZE / 2;\n\n    this.currentAvatarName = new BitmapText(characterName, {\n      fontName: 'MonospaceBold',\n      fontSize: 14,\n    });\n    this.currentAvatarName.tint = Colors.WHITE;\n    this.currentAvatarName.anchor.set(0.5);\n    this.currentAvatarName.x = avatarX + DialogueComponent.AVATAR_SIZE / 2;\n    this.currentAvatarName.y = boxY - 10;\n    this.addChild(this.currentAvatarName);\n\n    this.currentAvatarSprite = new Sprite(avatarTexture.texture);\n    this.currentAvatarSprite.width = DialogueComponent.AVATAR_SIZE;\n    this.currentAvatarSprite.height = DialogueComponent.AVATAR_SIZE;\n\n    // Default to left position\n    this.currentAvatarSprite.x = avatarX;\n    this.currentAvatarSprite.y = boxY - DialogueComponent.AVATAR_SIZE - 20;\n    this.addChild(this.currentAvatarSprite);\n  }\n\n  private displayText(text: string, position: 'left' | 'right'): void {\n    const boxWidth = this.screenWidth - 40;\n    const textMaxWidth =\n      boxWidth -\n      2 * DialogueComponent.DIALOGUE_BOX_PADDING -\n      DialogueComponent.AVATAR_SIZE -\n      DialogueComponent.AVATAR_MARGIN;\n\n    this.currentTextComponent = new TextWithInlineImages(\n      text,\n      this.emojiTextures,\n      'MonospaceBold',\n      18,\n      textMaxWidth\n    );\n\n    const boxX = 20;\n    const boxY = this.screenHeight - DialogueComponent.DIALOGUE_BOX_HEIGHT - 20;\n\n    if (position === 'left') {\n      this.currentTextComponent.x = boxX + DialogueComponent.DIALOGUE_BOX_PADDING;\n    } else {\n      this.currentTextComponent.x = boxX + DialogueComponent.DIALOGUE_BOX_PADDING;\n    }\n\n    this.currentTextComponent.y = boxY + DialogueComponent.DIALOGUE_BOX_PADDING;\n    this.addChild(this.currentTextComponent);\n  }\n\n  public nextDialogue(): boolean {\n    if (this.currentDialogueIndex < this.dialogueEntries.length - 1) {\n      this.currentDialogueIndex++;\n      this.displayCurrentDialogue();\n      return true;\n    }\n    return false;\n  }\n\n  public previousDialogue(): boolean {\n    if (this.currentDialogueIndex > 0) {\n      this.currentDialogueIndex--;\n      this.displayCurrentDialogue();\n      return true;\n    }\n    return false;\n  }\n\n  public getCurrentDialogueIndex(): number {\n    return this.currentDialogueIndex;\n  }\n\n  public getTotalDialogues(): number {\n    return this.dialogueEntries.length;\n  }\n\n  public isAtEnd(): boolean {\n    return this.currentDialogueIndex >= this.dialogueEntries.length - 1;\n  }\n\n  public isAtStart(): boolean {\n    return this.currentDialogueIndex <= 0;\n  }\n\n  public resetToStart(): void {\n    this.currentDialogueIndex = 0;\n    this.displayCurrentDialogue();\n  }\n\n  public resize(width: number, height: number): void {\n    this.screenWidth = width;\n    this.screenHeight = height;\n\n    if (this.isReady) {\n      this.displayCurrentDialogue();\n    }\n  }\n\n  public override destroy(): void {\n    this.clearCurrentDisplay();\n    super.destroy({ children: true });\n  }\n}\n","import { BitmapText, Container, Rectangle } from 'pixi.js';\nimport { BaseScene } from './BaseScene';\nimport { DialogueComponent } from '../components/DialogueComponent';\nimport { MagicWordsData } from '../types';\nimport { Colors } from '../utils/Colors';\nimport { AssetLoader } from '../utils/AssetLoader';\n\nexport class MagicWordsScene extends BaseScene {\n  public readonly name = 'Magic Words';\n\n  private titleText!: BitmapText;\n  private dialogueComponent: DialogueComponent | null = null;\n  private instructionText!: BitmapText;\n  private progressText!: BitmapText;\n  private clickArea: Container;\n\n  private magicWordsData: MagicWordsData | null = null;\n  private hasError = false;\n\n  constructor() {\n    super();\n\n    this.clickArea = new Container();\n    this.setupClickArea();\n  }\n\n  private setupClickArea(): void {\n    this.clickArea.hitArea = new Rectangle(0, 0, 100, 100);\n    this.clickArea.eventMode = 'static';\n    this.clickArea.cursor = 'pointer';\n    this.clickArea.on('pointertap', this.onScreenClick.bind(this));\n  }\n\n  init(): void {\n    this.createBitmapTexts();\n    this.setupTitle();\n\n    try {\n      this.magicWordsData = AssetLoader.getMagicWordsData();\n      if (!this.magicWordsData) {\n        throw new Error('Magic Words data not loaded by AssetLoader');\n      }\n\n      this.createDialogueComponent();\n      this.setupUI();\n    } catch (error) {\n      this.handleLoadError(error);\n    }\n\n    this.initialized = true;\n  }\n\n  private createBitmapTexts(): void {\n    this.titleText = new BitmapText('Magic Words', {\n      fontName: 'MonospaceBold',\n      fontSize: 28,\n    });\n\n    this.instructionText = new BitmapText('Click anywhere to continue dialogue', {\n      fontName: 'MonospaceBold',\n      fontSize: 16,\n    });\n\n    this.progressText = new BitmapText('', {\n      fontName: 'MonospaceBold',\n      fontSize: 14,\n    });\n  }\n\n  private setupTitle(): void {\n    this.titleText.tint = Colors.WHITE;\n    this.titleText.anchor.set(0.5, 0);\n    this.titleText.x = this.screenWidth / 2;\n    this.titleText.y = 40;\n    this.container.addChild(this.titleText);\n  }\n\n  private createDialogueComponent(): void {\n    if (!this.magicWordsData) {\n      return;\n    }\n\n    const emojiTextures = AssetLoader.getAllEmojiTextures();\n    const avatarTextures = AssetLoader.getAllAvatarTextures();\n\n    this.dialogueComponent = new DialogueComponent(\n      this.magicWordsData.dialogue,\n      emojiTextures,\n      avatarTextures\n    );\n\n    this.dialogueComponent.resize(this.screenWidth, this.screenHeight);\n    this.container.addChild(this.dialogueComponent);\n  }\n\n  private setupUI(): void {\n    this.instructionText.tint = Colors.WHITE;\n    this.instructionText.anchor.set(0.5);\n    this.instructionText.x = this.screenWidth / 2;\n    this.instructionText.y = 80;\n    this.container.addChild(this.instructionText);\n\n    this.progressText.tint = Colors.WHITE;\n    this.progressText.anchor.set(0.5);\n    this.progressText.x = this.screenWidth / 2;\n    this.progressText.y = 110;\n    this.container.addChild(this.progressText);\n\n    this.container.addChild(this.clickArea);\n\n    this.updateProgressText();\n  }\n\n  private handleLoadError(error: unknown): void {\n    console.error('Failed to load Magic Words data:', error);\n    this.hasError = true;\n\n    const errorText = new BitmapText('Failed to load dialogue data.\\nCheck console for details.', {\n      fontName: 'MonospaceBold',\n      fontSize: 16,\n    });\n    errorText.tint = Colors.WHITE;\n    errorText.anchor.set(0.5);\n    errorText.x = this.screenWidth / 2;\n    errorText.y = this.screenHeight / 2;\n    this.container.addChild(errorText);\n  }\n\n  private onScreenClick(): void {\n    if (this.hasError || !this.dialogueComponent) {\n      return;\n    }\n\n    const hasNext = this.dialogueComponent.nextDialogue();\n    this.updateProgressText();\n\n    if (!hasNext) {\n      this.onDialogueComplete();\n    }\n  }\n\n  private updateProgressText(): void {\n    if (!this.dialogueComponent) {\n      return;\n    }\n\n    const current = this.dialogueComponent.getCurrentDialogueIndex() + 1;\n    const total = this.dialogueComponent.getTotalDialogues();\n    this.progressText.text = `Dialogue ${current.toString()} / ${total.toString()}`;\n  }\n\n  private onDialogueComplete(): void {\n    this.instructionText.text = 'All dialogues complete! Click to restart.';\n\n    this.clickArea.removeAllListeners('pointertap');\n    this.clickArea.on('pointertap', () => {\n      if (this.dialogueComponent) {\n        this.dialogueComponent.resetToStart();\n        this.updateProgressText();\n        this.instructionText.text = 'Click anywhere to continue dialogue';\n\n        this.clickArea.removeAllListeners('pointertap');\n        this.clickArea.on('pointertap', this.onScreenClick.bind(this));\n      }\n    });\n  }\n\n  update(_deltaTime: number): void {\n    // No continuous updates needed for this scene\n  }\n\n  protected override onResize(width: number, height: number): void {\n    this.titleText.x = width / 2;\n    this.instructionText.x = width / 2;\n    this.progressText.x = width / 2;\n\n    if (this.dialogueComponent) {\n      this.dialogueComponent.resize(width, height);\n    }\n\n    this.clickArea.hitArea = new Rectangle(0, 0, width, height);\n  }\n\n  public getSpriteCount(): number {\n    let count = 3;\n\n    if (this.dialogueComponent) {\n      count += 10;\n    }\n\n    return count;\n  }\n\n  override destroy(): void {\n    this.clickArea.removeAllListeners();\n\n    if (this.dialogueComponent) {\n      this.dialogueComponent.destroy();\n    }\n\n    super.destroy();\n  }\n}\n","import { Container, Graphics, BitmapText } from 'pixi.js';\nimport { Colors } from '../utils/Colors';\nimport { GameManager } from '../GameManager';\nimport { PhoenixFlameScene } from '../scenes/PhoenixFlameScene';\nimport { AceOfShadowsScene } from '../scenes/AceOfShadowsScene';\nimport { MagicWordsScene } from '../scenes/MagicWordsScene';\n\nexport class SceneControls {\n  public container: Container;\n  private gameManager: GameManager;\n  private background: Graphics;\n  private currentSceneText!: BitmapText;\n  private fullscreenButton: Container;\n  private debugToggleButton: Container;\n  private phoenixFlameButton: Container;\n  private aceOfShadowsButton: Container;\n  private magicWordsButton: Container;\n\n  private readonly POS_Y = 140;\n  private readonly POS_X = 10;\n\n  private readonly PADDING_X = 10;\n  private readonly BUTTON_WIDTH = 100;\n  private readonly BUTTON_HEIGHT = 30;\n\n  constructor(gameManager: GameManager) {\n    this.gameManager = gameManager;\n    this.container = new Container();\n    this.background = new Graphics();\n    this.fullscreenButton = new Container();\n    this.debugToggleButton = new Container();\n    this.phoenixFlameButton = new Container();\n    this.aceOfShadowsButton = new Container();\n    this.magicWordsButton = new Container();\n  }\n\n  init(): void {\n    this.setupBackground();\n    this.setupCurrentSceneText();\n    this.setupSceneButtons();\n    this.setupFullscreenButton();\n    this.setupDebugToggleButton();\n    this.setupLayout();\n  }\n\n  private setupBackground(): void {\n    this.background.beginFill(0x000000, 0.7);\n    this.background.lineStyle(1, Colors.BLUE, 1);\n    this.background.drawRoundedRect(0, 0, 340, 160, 5);\n    this.background.endFill();\n    this.container.addChild(this.background);\n  }\n\n  private setupCurrentSceneText(): void {\n    this.currentSceneText = new BitmapText('Current: Demo', {\n      fontName: 'MonospaceBold',\n      fontSize: 16,\n    });\n\n    this.currentSceneText.tint = Colors.WHITE;\n    this.container.addChild(this.currentSceneText);\n  }\n\n  private setupSceneButtons(): void {\n    this.createSceneButton(this.aceOfShadowsButton, 'Ace of Shadows', () => {\n      this.gameManager.switchToScene(new AceOfShadowsScene());\n    });\n\n    this.createSceneButton(this.magicWordsButton, 'Magic Words', () => {\n      this.gameManager.switchToScene(new MagicWordsScene());\n    });\n\n    this.createSceneButton(this.phoenixFlameButton, 'Phoenix Flame', () => {\n      this.gameManager.switchToScene(new PhoenixFlameScene());\n    });\n\n    this.container.addChild(this.phoenixFlameButton);\n    this.container.addChild(this.aceOfShadowsButton);\n    this.container.addChild(this.magicWordsButton);\n  }\n\n  private createSceneButton(buttonContainer: Container, text: string, onClick: () => void): void {\n    const buttonBg = new Graphics();\n    buttonBg.beginFill(Colors.DARK_GRAY);\n    buttonBg.lineStyle(1, Colors.YELLOW);\n    buttonBg.drawRoundedRect(0, 0, this.BUTTON_WIDTH, this.BUTTON_HEIGHT, 3);\n    buttonBg.endFill();\n\n    const buttonText = new BitmapText(text, { fontName: 'MonospaceBold', fontSize: 12 });\n    buttonText.tint = Colors.YELLOW;\n    buttonText.position.set(\n      (this.BUTTON_WIDTH - buttonText.width) / 2,\n      (this.BUTTON_HEIGHT - buttonText.height) / 2\n    );\n\n    buttonContainer.addChild(buttonBg);\n    buttonContainer.addChild(buttonText);\n\n    buttonContainer.eventMode = 'static';\n    buttonContainer.cursor = 'pointer';\n\n    buttonContainer.on('pointerdown', onClick);\n    buttonContainer.on('click', onClick);\n\n    buttonContainer.on('pointerover', () => {\n      buttonBg.tint = 0xcccccc;\n    });\n\n    buttonContainer.on('pointerout', () => {\n      buttonBg.tint = 0xffffff;\n    });\n\n    buttonContainer.on('touchstart', () => {\n      buttonBg.tint = 0xcccccc;\n    });\n\n    buttonContainer.on('touchend', () => {\n      buttonBg.tint = 0xffffff;\n    });\n  }\n\n  private setupFullscreenButton(): void {\n    const buttonBg = new Graphics();\n    buttonBg.beginFill(Colors.DARK_GRAY);\n    buttonBg.lineStyle(1, Colors.WHITE);\n    buttonBg.drawRoundedRect(0, 0, this.BUTTON_WIDTH, this.BUTTON_HEIGHT, 3);\n    buttonBg.endFill();\n\n    const buttonText = new BitmapText('Fullscreen', { fontName: 'MonospaceBold', fontSize: 14 });\n    buttonText.tint = Colors.WHITE;\n    buttonText.position.set(\n      (this.BUTTON_WIDTH - buttonText.width) / 2,\n      (this.BUTTON_HEIGHT - buttonText.height) / 2\n    );\n\n    this.fullscreenButton.addChild(buttonBg);\n    this.fullscreenButton.addChild(buttonText);\n\n    this.fullscreenButton.eventMode = 'static';\n    this.fullscreenButton.cursor = 'pointer';\n\n    const fullscreenHandler = () => {\n      this.gameManager.toggleFullscreen();\n    };\n\n    this.fullscreenButton.on('pointerdown', fullscreenHandler);\n    this.fullscreenButton.on('click', fullscreenHandler);\n\n    this.fullscreenButton.on('pointerover', () => {\n      buttonBg.tint = 0xcccccc;\n    });\n\n    this.fullscreenButton.on('pointerout', () => {\n      buttonBg.tint = 0xffffff;\n    });\n\n    this.fullscreenButton.on('touchstart', () => {\n      buttonBg.tint = 0xcccccc;\n    });\n\n    this.fullscreenButton.on('touchend', () => {\n      buttonBg.tint = 0xffffff;\n    });\n\n    this.container.addChild(this.fullscreenButton);\n  }\n\n  private setupDebugToggleButton(): void {\n    const buttonBg = new Graphics();\n    buttonBg.beginFill(Colors.DARK_GRAY);\n    buttonBg.lineStyle(1, Colors.DEBUG_GREEN);\n    buttonBg.drawRoundedRect(0, 0, this.BUTTON_WIDTH, this.BUTTON_HEIGHT, 3);\n    buttonBg.endFill();\n\n    const buttonText = new BitmapText('Debug: ON', { fontName: 'MonospaceBold', fontSize: 14 });\n    buttonText.tint = Colors.DEBUG_GREEN;\n    buttonText.position.set(\n      (this.BUTTON_WIDTH - buttonText.width) / 2,\n      (this.BUTTON_HEIGHT - buttonText.height) / 2\n    );\n\n    this.debugToggleButton.addChild(buttonBg);\n    this.debugToggleButton.addChild(buttonText);\n\n    this.debugToggleButton.eventMode = 'static';\n    this.debugToggleButton.cursor = 'pointer';\n\n    const debugToggleHandler = () => {\n      this.gameManager.toggleDebugMode();\n      const newText = this.gameManager.debugMode ? 'Debug: ON' : 'Debug: OFF';\n      buttonText.text = newText;\n      buttonText.tint = this.gameManager.debugMode ? Colors.DEBUG_GREEN : Colors.RED;\n      buttonText.position.set(\n        (this.BUTTON_WIDTH - buttonText.width) / 2,\n        (this.BUTTON_HEIGHT - buttonText.height) / 2\n      );\n    };\n\n    this.debugToggleButton.on('pointerdown', debugToggleHandler);\n    this.debugToggleButton.on('click', debugToggleHandler);\n\n    this.debugToggleButton.on('pointerover', () => {\n      buttonBg.tint = 0xcccccc;\n    });\n\n    this.debugToggleButton.on('pointerout', () => {\n      buttonBg.tint = 0xffffff;\n    });\n\n    this.debugToggleButton.on('touchstart', () => {\n      buttonBg.tint = 0xcccccc;\n    });\n\n    this.debugToggleButton.on('touchend', () => {\n      buttonBg.tint = 0xffffff;\n    });\n\n    this.container.addChild(this.debugToggleButton);\n  }\n\n  private setupLayout(): void {\n    this.container.position.set(this.POS_X, this.POS_Y);\n    this.currentSceneText.position.set(this.PADDING_X, 10);\n\n    this.aceOfShadowsButton.position.set(this.PADDING_X, 40);\n    this.magicWordsButton.position.set(this.PADDING_X + this.BUTTON_WIDTH + 5, 40);\n    this.phoenixFlameButton.position.set(this.PADDING_X + (this.BUTTON_WIDTH + 5) * 2, 40);\n\n    this.fullscreenButton.position.set(this.PADDING_X, 90);\n    this.debugToggleButton.position.set(this.PADDING_X + this.BUTTON_WIDTH + 5, 90);\n  }\n\n  updateCurrentScene(sceneName: string): void {\n    this.currentSceneText.text = `Current: ${sceneName}`;\n  }\n}\n","import { Application, Ticker, Container } from 'pixi.js';\nimport { Scene, GameConfig, GameApplication, DebugInfo } from './types';\nimport { DebugMenu } from './components/DebugMenu';\nimport { SceneControls } from './components/SceneControls';\nimport { AssetLoader } from './utils/AssetLoader';\nimport { AceOfShadowsScene } from './scenes/AceOfShadowsScene';\n\nexport class GameManager {\n  private app: Application;\n  private config: GameConfig;\n  private currentScene: Scene | null = null;\n  private debugMenu: DebugMenu;\n  private sceneControls: SceneControls;\n  private assetLoader: AssetLoader;\n\n  public debugMode = true;\n\n  constructor(app: Application, config: GameConfig) {\n    this.app = app;\n    this.config = config;\n    this.assetLoader = new AssetLoader();\n    this.debugMenu = new DebugMenu();\n    this.sceneControls = new SceneControls(this);\n\n    (this.app as GameApplication).currentScene = null;\n    (this.app as GameApplication).debugMode = this.debugMode;\n  }\n\n  async init(): Promise<void> {\n    try {\n      await this.assetLoader.loadInitialAssets();\n      this.setupUI();\n      this.setupGameLoop();\n\n      this.switchToScene(new AceOfShadowsScene());\n    } catch (error) {\n      console.error('GameManager initialization failed:', error);\n      throw error;\n    }\n  }\n\n  private setupUI(): void {\n    this.app.stage.addChild(this.debugMenu.container);\n    this.app.stage.addChild(this.sceneControls.container);\n\n    this.debugMenu.init();\n    this.sceneControls.init();\n  }\n\n  private setupGameLoop(): void {\n    this.app.ticker.add(() => {\n      if (this.currentScene) {\n        this.currentScene.update(this.app.ticker.deltaMS);\n      }\n\n      if (this.debugMode) {\n        this.updateDebugInfo(this.app.ticker);\n      }\n    });\n  }\n\n  private updateDebugInfo(ticker: Ticker): void {\n    const debugInfo: DebugInfo = {\n      fps: Math.round(ticker.FPS * 10) / 10,\n      sceneName: this.currentScene?.name ?? 'No Scene',\n      spriteCount: this.getSpriteCount(),\n    };\n\n    this.debugMenu.updateDebugInfo(debugInfo);\n  }\n\n  private getSpriteCount(): number {\n    if (!this.currentScene) {\n      return 0;\n    }\n\n    let count = 0;\n    const countSprites = (container: Container): void => {\n      for (const child of container.children) {\n        if ('texture' in child && child.texture) {\n          count++;\n        }\n        if (child instanceof Container && child.children.length > 0) {\n          countSprites(child as Container);\n        }\n      }\n    };\n\n    countSprites(this.currentScene.container);\n    return count;\n  }\n\n  switchToScene(newScene: Scene): void {\n    try {\n      if (this.currentScene) {\n        this.app.stage.removeChild(this.currentScene.container);\n        this.currentScene.destroy();\n      }\n\n      this.currentScene = newScene;\n      (this.app as GameApplication).currentScene = newScene;\n\n      this.app.stage.addChildAt(newScene.container, 0);\n      newScene.init();\n      newScene.resize(this.app.screen.width, this.app.screen.height);\n\n      this.sceneControls.updateCurrentScene(newScene.name);\n    } catch (error) {\n      console.error('Failed to switch scene:', error);\n      throw error;\n    }\n  }\n\n  handleResize(): void {\n    const canvas = this.app.view as HTMLCanvasElement;\n    const container = canvas.parentElement;\n\n    if (!container) {\n      return;\n    }\n\n    const containerWidth = container.clientWidth;\n    const containerHeight = container.clientHeight;\n\n    canvas.style.transform = '';\n    canvas.style.transformOrigin = '';\n\n    // Fixed height approach - maintain the design height and calculate virtual width\n    const designHeight = this.config.height;\n    const aspectRatio = containerWidth / containerHeight;\n    const virtualWidth = Math.ceil(designHeight * aspectRatio);\n\n    this.app.renderer.resize(virtualWidth, designHeight);\n\n    canvas.style.width = `${containerWidth}px`;\n    canvas.style.height = `${containerHeight}px`;\n\n    if (this.currentScene) {\n      this.currentScene.resize(virtualWidth, designHeight);\n    }\n  }\n\n  toggleFullscreen(): void {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch((err: unknown) => {\n        console.error('Error attempting to enable fullscreen:', err);\n      });\n    } else {\n      void document.exitFullscreen();\n    }\n  }\n\n  toggleDebugMode(): void {\n    this.debugMode = !this.debugMode;\n    (this.app as GameApplication).debugMode = this.debugMode;\n    this.debugMenu.setVisible(this.debugMode);\n  }\n}\n","import '@pixi/events';\nimport { Application } from 'pixi.js';\nimport { GameManager } from './GameManager';\nimport { GameConfig } from './types';\nimport { Colors } from './utils/Colors';\n\nconst gameConfig: GameConfig = {\n  width: 1024,\n  height: 768,\n  backgroundColor: Colors.BACKGROUND,\n  antialias: true,\n  resolution: window.devicePixelRatio || 1,\n};\n\nasync function initGame(): Promise<void> {\n  try {\n    const app = new Application({\n      width: gameConfig.width,\n      height: gameConfig.height,\n      backgroundColor: gameConfig.backgroundColor,\n      antialias: gameConfig.antialias,\n      resolution: gameConfig.resolution,\n      autoDensity: true,\n    });\n\n    const gameContainer = document.getElementById('gameContainer');\n    if (!gameContainer) {\n      throw new Error('Game container element not found');\n    }\n\n    gameContainer.appendChild(app.view as HTMLCanvasElement);\n\n    const gameManager = new GameManager(app, gameConfig);\n    await gameManager.init();\n\n    window.addEventListener('resize', () => {\n      gameManager.handleResize();\n    });\n\n    gameManager.handleResize();\n  } catch (error) {\n    console.error('Failed to initialize game:', error);\n\n    const errorElement = document.createElement('div');\n    errorElement.style.color = 'white';\n    errorElement.style.fontSize = '24px';\n    errorElement.style.textAlign = 'center';\n    errorElement.style.margin = '50px';\n    errorElement.textContent = `Game initialization failed: ${error instanceof Error ? error.message : String(error)}`;\n\n    const gameContainer = document.getElementById('gameContainer');\n    if (gameContainer) {\n      gameContainer.appendChild(errorElement);\n    }\n  }\n}\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => {\n    void initGame();\n  });\n} else {\n  void initGame();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpixi7_game_demo\"] = self[\"webpackChunkpixi7_game_demo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(6948)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Colors","DebugMenu","constructor","POS_X","POS_Y","PADDING","LINE_HEIGHT","FONT_SIZE","this","container","background","init","setupBackground","setupTexts","setupLayout","beginFill","lineStyle","DEBUG_GREEN","drawRoundedRect","endFill","addChild","fpsText","fontName","fontSize","spriteText","tint","DEBUG_YELLOW","position","set","updateDebugInfo","debugInfo","text","fps","toString","spriteCount","RED","setVisible","visible","BaseScene","screenWidth","screenHeight","initialized","resize","width","height","onResize","_width","_height","destroy","removeChildren","children","texture","baseTexture","centerObject","sprite","x","y","anchor","AssetLoader","loadInitialAssets","load","textureCache","loadFont","loadAtlas","loadMagicWordsAssets","getTexture","name","get","cache","Error","hasTexture","has","fontPath","texturePath","alias","src","error","console","atlasPath","loadEmojis","emojis","emojiTextures","Map","loadPromises","map","async","emoji","url","loadParser","Promise","all","loadAvatars","avatars","avatarTextures","avatar","getEmojiTexture","getAvatarTexture","response","fetch","ok","status","data","json","dialogue","length","magicWordsData","emojies","getMagicWordsData","getAllEmojiTextures","key","entries","startsWith","substring","getAllAvatarTextures","FireMetaBallParticle","id","nextId","active","merged","angle","Math","random","PI","speed","vx","cos","vy","sin","maxLife","life","update","dt","getAlpha","a","FireMetaBallSystem","opts","super","particles","singleSprites","groups","maxSprites","max","emitterWidth","emitterHeight","baseMergeDistance","mergeDistance","spawnInterval","spawnTimer","p","cullDeadParticles","clusters","clusterToFitBudget","reconcileVisuals","maybeSpawn","updateSingleSprites","updateGroupSprites","scaleAtY","min","visual","getVisualSpriteCount","spawnOne","radius","baseBias","verticalOffset","push","sizes","size","floor","variation","rotation","singles","i","s","parent","removeChild","delete","splice","actives","filter","multipliers","chosen","m","clusterParticles","pickAnchor","comp","best","bestScore","score","threshold","cell","keyOf","buckets","k","list","undefined","visited","Set","candidates","px","py","cx","cy","out","oy","ox","seed","sumX","sumY","count","add","stack","COHESION","cur","pop","nb","dx","dy","d2","pairThr","cohThr","dcx","dcy","next","keyFor","grp","texName","pickMergeTexture","g","sort","b","join","alpha","blendMode","progress","baseScale","horizontalScale","scale","values","sa","n","pickSingle","p1","p2","abs","distance","sqrt","configType","normalizedAngle","atan2","configs","scatterConfigs","asymConfigs","clear","PhoenixFlameScene","animationTime","titleText","setupFire","WHITE","fireMetaBallSystem","pivot","deltaTime","_","PlayingCard","cardNumber","textureIndex","AVAILABLE_CARDS","textureName","currentStackIndex","positionInStack","setStackPosition","stackIndex","AceOfShadowsScene","cards","speedMultiplier","DEFAULT_SPEED_MULTIPLIER","sourceStackCards","destinationStackCards","animationTimer","isAnimating","animationComplete","activeTween","animatingCard","sourceStackPosition","destinationStackPosition","tweenGroup","sortableChildren","setupTitle","createCards","calculateStackPositions","arrangeCards","TOTAL_CARDS","card","arrangeStack","stackCards","stackPosition","CARD_OFFSET_X","CARD_OFFSET_Y","zIndex","adjustedInterval","ANIMATION_INTERVAL","animateNextCard","onAllCardsTransferred","log","cardToMove","destIndex","destX","destY","startRotation","targetRotation","to","ANIMATION_DURATION","easing","Sinusoidal","InOut","onUpdate","coords","onComplete","Back","Out","start","stop","newDestX","newDestY","currentRotation","setSpeedMultiplier","multiplier","getSpeedMultiplier","removeAll","TextWithInlineImages","maxWidth","MAX_WIDTH","textSegments","displayObjects","spaceWidth","measureTextWidth","parseAndLayoutText","createDisplayObjects","tokenRegex","parts","match","lastIndex","exec","index","type","content","slice","layoutParts","currentX","currentY","lineHeight","part","words","split","word","wordWithSpace","wordWidth","emojiSize","EMOJI_SIZE","tempText","clearDisplayObjects","segment","textObj","obj","updateText","newText","updateMaxWidth","newMaxWidth","getContentHeight","DialogueComponent","dialogueEntries","currentDialogueIndex","currentTextComponent","currentAvatarSprite","currentAvatarName","isReady","createDialogueBox","displayCurrentDialogue","dialogueBox","BLACK","currentEntry","characterName","clearCurrentDisplay","updateDialogueBox","displayAvatar","displayText","getDialogueBoxWidth","boxWidth","boxHeight","DIALOGUE_BOX_HEIGHT","boxY","avatarTexture","avatarX","AVATAR_MARGIN","AVATAR_SIZE","textMaxWidth","DIALOGUE_BOX_PADDING","nextDialogue","previousDialogue","getCurrentDialogueIndex","getTotalDialogues","isAtEnd","isAtStart","resetToStart","MagicWordsScene","dialogueComponent","hasError","clickArea","setupClickArea","hitArea","eventMode","cursor","on","onScreenClick","bind","createBitmapTexts","createDialogueComponent","setupUI","handleLoadError","instructionText","progressText","updateProgressText","errorText","hasNext","onDialogueComplete","current","total","removeAllListeners","_deltaTime","getSpriteCount","SceneControls","gameManager","PADDING_X","BUTTON_WIDTH","BUTTON_HEIGHT","fullscreenButton","debugToggleButton","phoenixFlameButton","aceOfShadowsButton","magicWordsButton","setupCurrentSceneText","setupSceneButtons","setupFullscreenButton","setupDebugToggleButton","BLUE","currentSceneText","createSceneButton","switchToScene","buttonContainer","onClick","buttonBg","DARK_GRAY","YELLOW","buttonText","fullscreenHandler","toggleFullscreen","debugToggleHandler","toggleDebugMode","debugMode","updateCurrentScene","sceneName","GameManager","app","config","currentScene","assetLoader","debugMenu","sceneControls","setupGameLoop","stage","ticker","deltaMS","round","FPS","countSprites","child","newScene","addChildAt","screen","handleResize","canvas","view","parentElement","containerWidth","clientWidth","containerHeight","clientHeight","style","transform","transformOrigin","designHeight","aspectRatio","virtualWidth","ceil","renderer","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","catch","err","gameConfig","backgroundColor","BACKGROUND","antialias","resolution","window","devicePixelRatio","initGame","autoDensity","gameContainer","getElementById","appendChild","addEventListener","errorElement","createElement","color","textAlign","margin","textContent","message","String","readyState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","r","d","definition","o","defineProperty","enumerable","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"sourceRoot":""}